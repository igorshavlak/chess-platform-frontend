import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import { useKeycloak } from '@react-keycloak/web';
import Sidebar from '../components/Sidebar/Sidebar';
import { 
  FaTrophy, 
  FaChessKnight, 
  FaChartLine, 
  FaHistory, 
  FaMedal, 
  FaCalendarAlt, 
  FaUserFriends
} from 'react-icons/fa';
import './UserProfilePage.css';

function UserProfilePage() {
  const { userId } = useParams();
  const { keycloak } = useKeycloak();
  const [userData, setUserData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState('stats');
  
  // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  const currentUser = keycloak.tokenParsed
    ? {
        id: keycloak.tokenParsed.sub,
        username: keycloak.tokenParsed.preferred_username,
        email: keycloak.tokenParsed.email,
        avatar: keycloak.tokenParsed.picture || null,
      }
    : null;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–º–æ—Ç—Ä–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ —á—É–∂–æ–π
  const isOwnProfile = !userId || userId === currentUser?.id;
  const profileUserId = userId || currentUser?.id;

  // –≠–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞
  useEffect(() => {
    const fetchUserData = async () => {
      //setLoading(false);
      
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã API-–∑–∞–ø—Ä–æ—Å
      setTimeout(() => {
        // –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
        const mockUserData = {
          id: profileUserId,
          username: isOwnProfile ? currentUser?.username : "–®–∞—Ö–º–∞—Ç–∏—Å—Ç–ü—Ä–æ",
          avatar: isOwnProfile ? currentUser?.avatar : null,
          rating: 1842,
          gamesPlayed: 387,
          wins: 186,
          losses: 146,
          draws: 55,
          achievements: [
            { id: 1, name: "–ü–µ—Ä—à–∞ –ø–µ—Ä–µ–º–æ–≥–∞", icon: "üèÜ", date: "2023-05-15" },
            { id: 2, name: "5 –ø–µ—Ä–µ–º–æ–≥ –ø–æ—Å–ø—ñ–ª—å", icon: "üî•", date: "2023-07-22" },
            { id: 3, name: "–†–µ–π—Ç–∏–Ω–≥ 1800+", icon: "‚≠ê", date: "2023-10-05" },
            { id: 4, name: "100 –ø–∞—Ä—Ç—ñ–π", icon: "üéÆ", date: "2023-08-30" },
            { id: 5, name: "–¢—É—Ä–Ω—ñ—Ä–Ω–∏–π –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å", icon: "ü•á", date: "2024-01-12" }
          ],
          recentGames: [
            { id: "game1", opponent: "–ì—Ä–æ—Å–º–µ–π—Å—Ç–µ—Ä42", result: "win", date: "2024-03-15", rating_change: "+8" },
            { id: "game2", opponent: "–ß–µ–º–ø—ñ–æ–Ω–õ—å–≤–æ–≤–∞", result: "loss", date: "2024-03-14", rating_change: "-5" },
            { id: "game3", opponent: "–®–∞—Ö–æ–≤–∏–π–ö–æ—Ä–æ–ª—å", result: "draw", date: "2024-03-12", rating_change: "0" },
            { id: "game4", opponent: "–ù–æ–≤–∞—á–æ–∫123", result: "win", date: "2024-03-10", rating_change: "+4" },
            { id: "game5", opponent: "–ú–∞–π—Å—Ç–µ—Ä–ú–∞—Ç", result: "win", date: "2024-03-08", rating_change: "+7" }
          ],
          memberSince: "2023-04-10",
          lastOnline: "2024-03-17",
          friends: 24,
          favoriteOpenings: [
            { name: "–°–∏—Ü–∏–ª—ñ–π—Å—å–∫–∏–π –∑–∞—Ö–∏—Å—Ç", games: 78, winRate: 62 },
            { name: "–î–µ–±—é—Ç —Ñ–µ—Ä–∑–µ–≤–∏—Ö –ø—ñ—à–∞–∫—ñ–≤", games: 45, winRate: 55 },
            { name: "–ó–∞—Ö–∏—Å—Ç –ö–∞—Ä–æ-–ö–∞–Ω–Ω", games: 37, winRate: 48 }
          ],
          ratingHistory: [
            { month: "–í–µ—Ä", rating: 1650 },
            { month: "–ñ–æ–≤", rating: 1720 },
            { month: "–õ–∏—Å", rating: 1695 },
            { month: "–ì—Ä—É", rating: 1750 },
            { month: "–°—ñ—á", rating: 1780 },
            { month: "–õ—é—Ç", rating: 1815 },
            { month: "–ë–µ—Ä", rating: 1842 }
          ]
        };
        
        setUserData(mockUserData);
        setLoading(false);
      }, 1000);
    };
    
    if (keycloak.authenticated) {
      fetchUserData();
    }
  }, [keycloak.authenticated, profileUserId, isOwnProfile, currentUser]);

  // –†–µ–Ω–¥–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) {
    return (
      <div className="page-container">
        <Sidebar />
        <main className="content-area">
          <div className="loading-spinner">
            <div className="spinner"></div>
            <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é...</p>
          </div>
        </main>
      </div>
    );
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
  if (!keycloak.authenticated) {
    return (
      <div className="page-container">
        <Sidebar />
        <main className="content-area">
          <div className="auth-required">
            <h2>–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è</h2>
            <p>–î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø—Ä–æ—Ñ—ñ–ª—é –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.</p>
            <button onClick={() => keycloak.login()} className="login-button">
              –£–≤—ñ–π—Ç–∏
            </button>
          </div>
        </main>
      </div>
    );
  }

  // –†–µ–Ω–¥–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const renderStats = () => (
    <div className="stats-container">
      <div className="stats-overview">
        <div className="stats-card">
          <div className="stats-header">
            <FaChartLine className="stats-icon" />
            <h3>–†–µ–π—Ç–∏–Ω–≥</h3>
          </div>
          <div className="rating-value">{userData.rating}</div>
          <div className="rating-chart">
            {userData.ratingHistory.map((data, index) => (
              <div key={index} className="chart-bar-container">
                <div 
                  className="chart-bar" 
                  style={{ 
                    height: `${Math.max(0, (data.rating - 1600) / 5)}px`
                  }}
                ></div>
                <span className="chart-label">{data.month}</span>
              </div>
            ))}
          </div>
        </div>

        <div className="stats-card">
          <div className="stats-header">
            <FaChessKnight className="stats-icon" />
            <h3>–ü–∞—Ä—Ç—ñ—ó</h3>
          </div>
          <div className="games-stats">
            <div className="games-played">
              <span className="games-number">{userData.gamesPlayed}</span>
              <span className="games-label">–∑—ñ–≥—Ä–∞–Ω–æ</span>
            </div>
            <div className="games-chart">
              <div className="chart-pie">
                <div className="pie-segment wins" style={{ '--percentage': `${(userData.wins / userData.gamesPlayed) * 100}%` }}></div>
                <div className="pie-segment draws" style={{ '--percentage': `${(userData.draws / userData.gamesPlayed) * 100}%` }}></div>
                <div className="pie-segment losses" style={{ '--percentage': `${(userData.losses / userData.gamesPlayed) * 100}%` }}></div>
              </div>
              <div className="chart-legend">
                <div className="legend-item">
                  <span className="legend-color wins"></span>
                  <span className="legend-label">–ü–µ—Ä–µ–º–æ–≥–∏: {userData.wins}</span>
                </div>
                <div className="legend-item">
                  <span className="legend-color draws"></span>
                  <span className="legend-label">–ù—ñ—á–∏—ó: {userData.draws}</span>
                </div>
                <div className="legend-item">
                  <span className="legend-color losses"></span>
                  <span className="legend-label">–ü–æ—Ä–∞–∑–∫–∏: {userData.losses}</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className="stats-card">
          <div className="stats-header">
            <FaChessKnight className="stats-icon" />
            <h3>–£–ª—é–±–ª–µ–Ω—ñ –¥–µ–±—é—Ç–∏</h3>
          </div>
          <div className="openings-list">
            {userData.favoriteOpenings.map((opening, index) => (
              <div key={index} className="opening-item">
                <div className="opening-name">{opening.name}</div>
                <div className="opening-stats">
                  <span className="opening-games">{opening.games} –ø–∞—Ä—Ç—ñ–π</span>
                  <div className="opening-winrate">
                    <div className="winrate-bar" style={{ width: `${opening.winRate}%` }}></div>
                    <span className="winrate-text">{opening.winRate}% –ø–µ—Ä–µ–º–æ–≥</span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  // –†–µ–Ω–¥–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏ –∏–≥—Ä
  const renderGames = () => (
    <div className="games-history">
      <h3><FaHistory /> –û—Å—Ç–∞–Ω–Ω—ñ –ø–∞—Ä—Ç—ñ—ó</h3>
      <div className="games-list">
        {userData.recentGames.map((game) => (
          <div key={game.id} className={`game-card ${game.result}`}>
            <div className="game-result-indicator"></div>
            <div className="game-details">
              <div className="game-opponent">
                <strong>–°—É–ø–µ—Ä–Ω–∏–∫:</strong> {game.opponent}
              </div>
              <div className="game-date">
                <FaCalendarAlt /> {game.date}
              </div>
            </div>
            <div className="game-result-info">
              <div className={`result-badge ${game.result}`}>
                {game.result === 'win' ? '–ü–µ—Ä–µ–º–æ–≥–∞' : game.result === 'loss' ? '–ü–æ—Ä–∞–∑–∫–∞' : '–ù—ñ—á–∏—è'}
              </div>
              <div className={`rating-change ${game.rating_change.startsWith('+') ? 'positive' : game.rating_change.startsWith('-') ? 'negative' : 'neutral'}`}>
                {game.rating_change}
              </div>
            </div>
            <button className="view-game-btn">–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø–∞—Ä—Ç—ñ—é</button>
          </div>
        ))}
      </div>
      <button className="load-more-btn">–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –±—ñ–ª—å—à–µ –ø–∞—Ä—Ç—ñ–π</button>
    </div>
  );

  // –†–µ–Ω–¥–µ—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  const renderAchievements = () => (
    <div className="achievements-container">
      <h3><FaTrophy /> –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è</h3>
      <div className="achievements-grid">
        {userData.achievements.map((achievement) => (
          <div key={achievement.id} className="achievement-card">
            <div className="achievement-icon">{achievement.icon}</div>
            <div className="achievement-details">
              <div className="achievement-name">{achievement.name}</div>
              <div className="achievement-date">{achievement.date}</div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  return (
    <div className="page-container">
      <Sidebar />
      <main className="content-area">
        <div className="profile-container">
          <div className="profile-header">
            <div className="profile-avatar-section">
              {userData.avatar ? (
                <img src={userData.avatar} alt="User Avatar" className="profile-avatar" />
              ) : (
                <div className="profile-avatar default-avatar">
                  {userData.username.charAt(0).toUpperCase()}
                </div>
              )}
              <div className="profile-rating">
                <span className="rating-number">{userData.rating}</span>
                <span className="rating-label">ELO</span>
              </div>
            </div>
            
            <div className="profile-info">
              <h2 className="profile-username">{userData.username}</h2>
              <div className="profile-meta">
                <div className="meta-item">
                  <FaCalendarAlt className="meta-icon" />
                  <span>–ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ –∑ {userData.memberSince}</span>
                </div>
                <div className="meta-item">
                  <FaUserFriends className="meta-icon" />
                  <span>{userData.friends} –¥—Ä—É–∑—ñ–≤</span>
                </div>
              </div>
              {isOwnProfile ? (
                <button className="edit-profile-btn">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</button>
              ) : (
                <div className="profile-actions">
                  <button className="add-friend-btn">–î–æ–¥–∞—Ç–∏ –≤ –¥—Ä—É–∑—ñ</button>
                  <button className="challenge-btn">–í–∏–∫–ª–∏–∫–∞—Ç–∏ –Ω–∞ –≥—Ä—É</button>
                </div>
              )}
            </div>
          </div>
          
          <div className="profile-tabs">
            <button 
              className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}
              onClick={() => setActiveTab('stats')}
            >
              <FaChartLine /> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </button>
            <button 
              className={`tab-btn ${activeTab === 'games' ? 'active' : ''}`}
              onClick={() => setActiveTab('games')}
            >
              <FaHistory /> –Ü—Å—Ç–æ—Ä—ñ—è –ø–∞—Ä—Ç—ñ–π
            </button>
            <button 
              className={`tab-btn ${activeTab === 'achievements' ? 'active' : ''}`}
              onClick={() => setActiveTab('achievements')}
            >
              <FaMedal /> –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è
            </button>
          </div>
          
          <div className="profile-content">
            {activeTab === 'stats' && renderStats()}
            {activeTab === 'games' && renderGames()}
            {activeTab === 'achievements' && renderAchievements()}
          </div>
        </div>
      </main>
    </div>
  );
}

export default UserProfilePage;